<?php

namespace DoctrineProxies\__CG__\App\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class ProjectMemberInfo extends \App\Entities\ProjectMemberInfo implements \Doctrine\ORM\Proxy\InternalProxy
{
    use \Symfony\Component\VarExporter\LazyGhostTrait {
        initializeLazyObject as private;
        setLazyObjectAsInitialized as public __setInitialized;
        isLazyObjectInitialized as private;
        createLazyGhost as private;
        resetLazyObject as private;
    }

    public function __load(): void
    {
        $this->initializeLazyObject();
    }
    

    private const LAZY_OBJECT_PROPERTY_SCOPES = [
        "\0".parent::class."\0".'createdAt' => [parent::class, 'createdAt', null],
        "\0".parent::class."\0".'firstName' => [parent::class, 'firstName', null],
        "\0".parent::class."\0".'id' => [parent::class, 'id', null],
        "\0".parent::class."\0".'isOwnerSigniture' => [parent::class, 'isOwnerSigniture', null],
        "\0".parent::class."\0".'lastName' => [parent::class, 'lastName', null],
        "\0".parent::class."\0".'percent' => [parent::class, 'percent', null],
        "\0".parent::class."\0".'position' => [parent::class, 'position', null],
        "\0".parent::class."\0".'project' => [parent::class, 'project', null],
        "\0".parent::class."\0".'type' => [parent::class, 'type', null],
        "\0".parent::class."\0".'updatedAt' => [parent::class, 'updatedAt', null],
        'createdAt' => [parent::class, 'createdAt', null],
        'firstName' => [parent::class, 'firstName', null],
        'id' => [parent::class, 'id', null],
        'isOwnerSigniture' => [parent::class, 'isOwnerSigniture', null],
        'lastName' => [parent::class, 'lastName', null],
        'percent' => [parent::class, 'percent', null],
        'position' => [parent::class, 'position', null],
        'project' => [parent::class, 'project', null],
        'type' => [parent::class, 'type', null],
        'updatedAt' => [parent::class, 'updatedAt', null],
    ];

    public function __isInitialized(): bool
    {
        return isset($this->lazyObjectState) && $this->isLazyObjectInitialized();
    }

    public function __serialize(): array
    {
        $properties = (array) $this;
        unset($properties["\0" . self::class . "\0lazyObjectState"]);

        return $properties;
    }
}
